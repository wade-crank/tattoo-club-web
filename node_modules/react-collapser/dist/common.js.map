{"version":3,"file":"common.js","sources":["../src/components/collapser/index.jsx","../src/components/panel/index.jsx","../src/components/trigger/index.jsx"],"sourcesContent":["import * as React from 'react'\n\nexport const Collapser = (props) => {\n  const {\n    children,\n    className = 'collapse',\n    alwaysOpen = false,\n    index = typeof alwaysOpen === 'number'\n      ? alwaysOpen + 1\n      : alwaysOpen\n      ? 0\n      : -1,\n    controlled = false,\n    revealed = false,\n    animated = false,\n    disabled = false,\n    onChange = () => null\n  } = props\n\n  const divProps = { ...props }\n  delete divProps.alwaysOpen\n\n  const [activeIndex, setActiveIndex] = React.useState(index)\n  const [isRevealed, revealAll] = React.useState(false)\n\n  React.useEffect(() => {\n    revealed && revealAll(true)\n  }, [revealed])\n\n  React.useEffect(() => {\n    onChange({\n      activeIndex\n    })\n  }, [activeIndex])\n\n  const handleActive = (clickedIndex) => {\n    if ((controlled && controlled) || disabled) return false\n\n    revealed && revealAll(false)\n    const isEqual = clickedIndex === activeIndex\n\n    if (alwaysOpen) {\n      setActiveIndex(\n        isEqual\n          ? typeof alwaysOpen === 'number'\n            ? alwaysOpen + 1\n            : 0\n          : clickedIndex\n      )\n    } else {\n      setActiveIndex(isEqual ? -1 : clickedIndex)\n    }\n  }\n\n  const handleState = (child, key) => {\n    if (typeof child === 'string') return child\n    let isOpen = false\n\n    if (isRevealed) {\n      isOpen = isRevealed\n    } else if (controlled) {\n      isOpen = controlled\n    } else {\n      isOpen = key % 2 !== 0 ? key === activeIndex + 1 : key === activeIndex\n    }\n\n    const state = {\n      handleActive,\n      key,\n      index: key,\n      animated,\n      isOpen\n    }\n\n    return React.cloneElement(child, state)\n  }\n\n  return (\n    <div {...divProps} className={className}>\n      {children.map((child, key) => {\n        if (child.type.toString() === 'Symbol(react.element)') {\n          return handleState(child, key)\n        }\n\n        if (child.type.toString() === 'Symbol(react.fragment)') {\n          return child.props.children.map((item, childKey) => {\n            return handleState(item, child.key * 2 + childKey)\n          })\n        }\n\n        return handleState(child, key)\n      })}\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport const Panel = ({\n  className = 'collapse-panel',\n  children,\n  controlled,\n  animated,\n  isOpen\n}) => {\n  const styles = {\n    maxHeight: (controlled && controlled) || isOpen ? 'initial' : 0,\n    overflow: isOpen ? 'visible' : 'hidden'\n  }\n\n  if (animated) {\n    styles.transition = 'all 0.3s'\n  }\n\n  return (\n    <div\n      className={className}\n      aria-expanded={(controlled && controlled) || isOpen}\n      style={styles}\n    >\n      {children}\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport const Trigger = ({\n  isOpen,\n  handleActive,\n  className = 'collapse-trigger',\n  children,\n  index,\n  disabled = false,\n  controlled = false\n}) => {\n  const thisProps = {}\n\n  if (disabled) thisProps['aria-disabled'] = true\n\n  return (\n    <div\n      {...thisProps}\n      className={className}\n      aria-expanded={(controlled && controlled) || isOpen}\n      onClick={() => !disabled && handleActive(index)}\n    >\n      {children}\n    </div>\n  )\n}\n"],"names":["Collapser","props","children","className","alwaysOpen","index","controlled","revealed","animated","disabled","onChange","divProps","React","activeIndex","setActiveIndex","isRevealed","revealAll","handleActive","clickedIndex","isEqual","handleState","child","key","state","isOpen","React.createElement","map","type","toString","item","childKey","Panel","styles","maxHeight","overflow","transition","style","Trigger","thisProps","onClick"],"mappings":"woDAEaA,UAAY,SAACC,OAEtBC,EAaED,EAbFC,WAaED,EAZFE,UAAAA,aAAY,eAYVF,EAXFG,WAAAA,kBAWEH,EAVFI,MAAAA,aAA8B,iBAAfD,EACXA,EAAa,EACbA,EACA,GACC,MAMHH,EALFK,WAAAA,kBAKEL,EAJFM,SAAAA,kBAIEN,EAHFO,SAAAA,kBAGEP,EAFFQ,SAAAA,kBAEER,EADFS,SAAAA,aAAW,kBAAM,QAGbC,oBAAgBV,UACfU,EAASP,gCAEsBQ,eAAeP,MAA9CQ,OAAaC,wBACYF,gBAAe,MAAxCG,OAAYC,OAEnBJ,iBAAgB,WACdL,GAAYS,GAAU,KACrB,CAACT,IAEJK,iBAAgB,WACdF,EAAS,CACPG,YAAAA,MAED,CAACA,QAEEI,EAAe,SAACC,MACfZ,GAAcA,GAAeG,EAAU,OAAO,EAEnDF,GAAYS,GAAU,OAChBG,EAAUD,IAAiBL,EAG/BC,EADEV,EAEAe,EAC0B,iBAAff,EACLA,EAAa,EACb,EACFc,EAGSC,GAAW,EAAID,IAI5BE,EAAc,SAACC,EAAOC,MACL,iBAAVD,EAAoB,OAAOA,MAWhCE,EAAQ,CACZN,aAAAA,EACAK,IAAAA,EACAjB,MAAOiB,EACPd,SAAAA,EACAgB,OAbET,IAEOT,IAGAgB,EAAM,GAAM,EAAIA,IAAQT,EAAc,EAAIS,IAAQT,YAWtDD,mBAAmBS,EAAOE,WAIjCE,sCAASd,GAAUR,UAAWA,IAC3BD,EAASwB,KAAI,SAACL,EAAOC,SACU,0BAA1BD,EAAMM,KAAKC,WACNR,EAAYC,EAAOC,GAGE,2BAA1BD,EAAMM,KAAKC,WACNP,EAAMpB,MAAMC,SAASwB,KAAI,SAACG,EAAMC,UAC9BV,EAAYS,EAAkB,EAAZR,EAAMC,IAAUQ,MAItCV,EAAYC,EAAOC,QCxFrBS,MAAQ,oBACnB5B,UAAAA,aAAY,mBACZD,IAAAA,SACAI,IAAAA,WACAE,IAAAA,SACAgB,IAAAA,OAEMQ,EAAS,CACbC,UAAY3B,GAAcA,GAAekB,EAAS,UAAY,EAC9DU,SAAUV,EAAS,UAAY,iBAG7BhB,IACFwB,EAAOG,WAAa,YAIpBV,2BACEtB,UAAWA,kBACKG,GAAcA,GAAekB,EAC7CY,MAAOJ,GAEN9B,ICtBMmC,QAAU,gBACrBb,IAAAA,OACAP,IAAAA,iBACAd,UAAAA,aAAY,qBACZD,IAAAA,SACAG,IAAAA,UACAI,SAAAA,oBACAH,WAAAA,gBAEMgC,EAAY,UAEd7B,IAAU6B,EAAU,kBAAmB,GAGzCb,sCACMa,GACJnC,UAAWA,kBACKG,GAAcA,GAAekB,EAC7Ce,QAAS,kBAAO9B,GAAYQ,EAAaZ,MAExCH"}